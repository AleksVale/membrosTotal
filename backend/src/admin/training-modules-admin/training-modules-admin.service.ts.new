import { Injectable, NotFoundException } from '@nestjs/common';
import { CreateTrainingModulesAdminDto } from './dto/create-training-modules-admin.dto';
import { UpdateTrainingModulesAdminDto } from './dto/update-training-modules-admin.dto';
import { Pagination } from 'src/common/dto/pagination.dto';
import { OrderDTO } from './dto/order.dto';
import { AddPermissionAdminDTO } from 'src/admin/sub-modules-admin/dto/add-permissions-subModule-training.dto';
import { TrainingModulesRepository } from 'src/repositories/training-modules.repository';

@Injectable()
export class TrainingModulesAdminService {
  constructor(private readonly trainingModulesRepository: TrainingModulesRepository) {}

  async create(createTrainingModulesAdminDto: CreateTrainingModulesAdminDto) {
    // Existing implementation
  }

  async findAll(trainingId: string, options: Pagination) {
    // Existing implementation
  }

  async findOne(id: number) {
    // Existing implementation
  }
  
  async getPermissions(id: number) {
    const module = await this.trainingModulesRepository.find({ id });
    if (!module) throw new NotFoundException('ID inv√°lido');
    
    const users = await this.trainingModulesRepository.getUsersWithPermission(id);
    return users;
  }

  async update(id: number, updateTrainingModulesAdminDto: UpdateTrainingModulesAdminDto) {
    // Existing implementation
  }

  async remove(id: number) {
    // Existing implementation
  }

  async addPermission(id: number, data: AddPermissionAdminDTO) {
    // Existing implementation
  }

  async dragOrder(orderDTO: OrderDTO) {
    // Existing implementation
  }
}
